@using SasquatchCAIRS.Models.Common
@using SasquatchCAIRS.Models.Service
@model SasquatchCAIRS.Models.Search.SearchCriteria

@{
    ViewBag.Title = Constants.UIString.TitleText.ADVANCED_SEARCH;
    ViewBag.Page = "advanced-search";
}

<h2>@Constants.UIString.TitleText.ADVANCED_SEARCH</h2>

@if (@ViewBag.emptyForm != null) {
    <div class="message palette-danger-dark">@Constants.UIString.Response.EMPTY_QUERY</div>
}
@if (@ViewBag.invalidDate != null) {
    <div class="message palette-danger-dark">@Constants.UIString.Response.INVALID_DATES</div>
}
@using (Html.BeginForm("Results", "Search", FormMethod.Post,
                       new {
                           @class = "form advanced-search-form"
                       })) {
    @Html.ValidationSummary(true)

    <table class="table unbordered-table valign-middle">
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.ANY_KEYWORDS</td>
            <td colspan="3">
                <input name="anyKeywordString" id="keywordString" 
                       type="text" class="span9 peek"
                       autocomplete="off"
                       value="@Model.anyKeywordString"/>
            </td>
        </tr>
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.ALL_KEYWORDS</td>
            <td colspan="3"><input name="allKeywords" id="allKeywords" 
                                   type="text" class="span9 peek"
                                   autocomplete="off"
                                   value="@Model.allKeywordString"/></td>
        </tr>
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.NONE_KEYWORDS</td>
            <td colspan="3"><input name="noneKeywords" id="noneKeywords" 
                                   type="text" class="span9 peek"
                                   autocomplete="off"
                                   value="@Model.noneKeywordString"/></td>
        </tr>

        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.START_TIME</td>
            <td>
                @if (Model.startTime != null && !Model.startTime.ToString(Constants.DATE_FORMAT)
                                                      .Equals(Constants.EMPTY_DATE)) {
                    <input class="span3" name="startTime" id="startTime" type="text" 
                           value="@Model.startTime.ToString(Constants.DATE_FORMAT)" />
                } else {
                    <input class="span3" name="startTime" id="startTime" type="text" />
                }
            </td>
            <td class="tbl-label">@Constants.UIString.FieldLabel.COMPLETED_TIME</td>
            <td>
                @if (!Model.completionTime.ToString(Constants.DATE_FORMAT)
                           .Equals(Constants.EMPTY_DATE)) {
                    <input class="span3" name="completionTime" id="completionTime" type="text" 
                           value="@Model.completionTime.ToString(Constants.DATE_FORMAT)" />
                } else {
                    <input class="span3" name="completionTime" id="completionTime" type="text" />
                }
            </td>
        </tr>
    </table>

    if (@Roles.IsUserInRole(Constants.Roles.ADMINISTRATOR) || Roles.IsUserInRole(Constants.Roles.REQUEST_EDITOR)) {
        <table class="table unbordered-table valign-middle" id="status">
            <tr>
                <td class="tbl-label">@Constants.UIString.FieldLabel.STATUS</td>
                @foreach (object status in Enum.GetValues(
                    typeof (Constants.RequestStatus))) {
                    if (Constants.RequestStatus.Invalid.CompareTo(status) == 0 &&
                        !Roles.IsUserInRole(Constants.Roles.ADMINISTRATOR)) {} else {
                        <td class="tbl-content-283">
                            <label class="checkbox radio-custom" id="@status">
                                @if (!String.IsNullOrEmpty(Model.requestStatus) &&
                                     Model.requestStatus.Contains(@status.ToString())) {
                                    <input type="checkbox" name="status" value="@status" checked/>
                                } else {
                                    <input type="checkbox" name="status" value="@status" />
                                }
                                @status
                            </label>
                        </td>
                    }
                }
            </tr>
        </table>
    }

    <table class="table unbordered-table valign-middle">
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.CALLER_NAME_LABEL</td>
            <td class="tbl-content-335">
                <input type="text" class="span3" name="requestorFirst" 
                       placeholder="@Constants.UIString.FieldLabel.CALLER_FNAME" value="@Model.requestorFirstName">
            </td>
            <td>
                <input type="text" class="span3" name="requestorLast" 
                       placeholder="@Constants.UIString.FieldLabel.CALLER_LNAME" value="@Model.requestorLastName">
            </td>
        </tr>
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.PATIENT_NAME_LABEL</td>
            <td>
                <input type="text" class="span3" name="patientFirst"
                       placeholder="@Constants.UIString.FieldLabel.PATIENT_FNAME" value="@Model.patientFirstName">
            </td>
            <td>
                <input type="text" class="span3" name="patientLast" 
                       placeholder="@Constants.UIString.FieldLabel.PATIENT_LNAME" value="@Model.patientLastName">
            </td>
        </tr>
    </table>

    <table class="table unbordered-table valign-middle">
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.TUMOUR_GROUP</td>
            <td>
                <div class="scroll scroll-box span5" id="tumour-group">
                    @foreach (DropdownEntry item in @ViewBag.TumorGroups) {
                        if (!String.IsNullOrEmpty(Model.tumorGroup) &&
                            Model.tumorGroup.Contains(@item.id + "")) {
                            <label class="checkbox radio-custom" id="@item.id">
                                <input type="checkbox" name="tumorGroup" class="internalcheckbox" value="@item.id" checked/>
                                @item.text
                            </label>
                        } else {
                            <label class="checkbox radio-custom" id="@item.id">
                                <input type="checkbox" name="tumorGroup" class="internalcheckbox" value="@item.id" />
                                @item.text
                            </label>
                        }
                    }
                </div>
            </td>
        </tr>
        
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.QUESTION_TYPE</td>
            <td>
                <div class="scroll scroll-box span5" id="question-type">
                    @foreach (DropdownEntry item in @ViewBag.QuestionType) {
                        if (!String.IsNullOrEmpty(Model.questionType) &&
                            Model.questionType.Contains(@item.id + "")) {
                            <label class="checkbox radio-custom" id="@item.id">
                                <input type="checkbox" name="questionType" class="internalcheckbox" value="@item.id" checked/>
                                @item.text
                            </label>
                        } else {
                            <label class="checkbox radio-custom" id="@item.id">
                                <input type="checkbox" name="questionType" class="internalcheckbox" value="@item.id"/>
                                @item.text
                            </label>
                        }
                    }
                </div>
            </td>
        </tr>
    </table>

    <table class="table unbordered-table valign-middle">
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.SEVERITY</td>
            @foreach (object severity in Enum.GetValues(typeof (Constants.Severity))) {
                <td class="tbl-content-283">
                    <label class="checkbox radio-custom">
                        @if (!String.IsNullOrEmpty(Model.severity) &&
                             Model.consequence.Contains(@severity.ToString())) {
                            <input type="checkbox" name="severity" value="@severity" checked/>
                        } else {
                            <input type="checkbox" name="severity" value="@severity" />
                        }
                        @severity
                    </label>
                </td>
            }
        </tr>
    </table>
    <table class="table unbordered-table valign-middle">
        <tr>
            <td class="tbl-label">@Constants.UIString.FieldLabel.CONSEQUENCE</td>
            @foreach (object consequence in Enum.GetValues(typeof (Constants.Consequence))) {
                <td class="tbl-content-2125">
                    <label class="checkbox radio-custom">
                        @if (!String.IsNullOrEmpty(Model.consequence) &&
                             Model.consequence.Contains(@consequence.ToString())) {
                            <input type="checkbox" name="consequence" value="@consequence" checked/>
                        } else {
                            <input type="checkbox" name="consequence" value="@consequence" />
                        }
                        @consequence
                    </label>
                </td>
            }
        </tr>
    </table>

    <table class="table unbordered-table valign-middle">
        <tr>
            <td class="tbl-label"></td>
            <td>
                <button class="btn btn-custom" type="submit" id="@Constants.UIString.ItemIDs.SUBMIT_BUTTON">
                    <i class="icon-search"></i> @Constants.UIString.ButtonText.SEARCH
                </button>

            </td>
        </tr>
    </table>
}



<script type="text/javascript">
    $(function() {
        $('#startTime').datepicker();
        $('#completionTime').datepicker();
        $(/*'#anyKeywordString','#noneKeywords','#allKeywords'*/ '.peek').typeahead({
            source: function(query, process) {
                var last = query.split(/\s*[,;]\s*/).pop();

                $.post("@Url.Action("GetMatchingKeywords", "Request")/" + last, function(data) {
                    process(data);
                });
            },
            updater: function(item) {
                var terms = this.query.split(/\s*[,;]\s*/);
                terms.pop();
                terms.push(item);
                terms.push("");

                return terms.join(", ");
            },
            matcher: function(item) {
                return (this.query).split(/\s*[,;]\s*/).pop().length > 0;
            },
            highlighter: function(item) {
                var query = this.query.split(/\s*[,;]\s*/).pop().replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
                return item.replace(new RegExp('(' + query + ')', 'ig'), function($1, match) {
                    return '<strong>' + match + '</strong>';
                });
            }
        });

    });
  
        
</script>
    

