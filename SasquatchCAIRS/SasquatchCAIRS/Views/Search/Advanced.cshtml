@using SasquatchCAIRS.Models
@using SasquatchCAIRS.Models.ServiceSystem
@model SasquatchCAIRS.Models.SearchSystem.SearchCriteria

@{
    ViewBag.Title = Constants.UIString.TitleText.ADVANCED_SEARCH;
}

<h2>@Constants.UIString.TitleText.ADVANCED_SEARCH</h2>

@using (Html.BeginForm("Results", "Search", FormMethod.Post,
    new {
        @class = "form form-search"
    })) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@Constants.UIString.TitleText.ADVANCED_SEARCH</legend>
        <div>
            <br>
            @Html.Label(Constants.UIString.FieldLabel.KEYWORDS)
        </div>
        <div>
            @Html.EditorFor(model => model.keywordString)
            @Html.ValidationMessageFor(model => model.keywordString)
        </div>

        <div>
            <br />
            @Html.Label(Constants.UIString.FieldLabel.START_TIME)
        </div>

        <div>
            @if (!Model.startTime.ToString(Constants.DATE_FORMAT)
                       .Equals(Constants.EMPTY_DATE)) {
                <input class="input-medium" name="startTime" id="startTime" type="date" 
                       value="@Model.startTime.ToString(Constants.DATE_FORMAT)" />    
            } else {
                <input class="input-medium" name="startTime" id="startTime" type="date" />
            }
        </div>

        <div>
            <br />
            @Html.Label(Constants.UIString.FieldLabel.COMPLETED_TIME)
        </div>
        <div>
            @if (!Model.completionTime.ToString(Constants.DATE_FORMAT)
                       .Equals(Constants.EMPTY_DATE)) {
                <input class="input-medium" name="completionTime" id="completionTime" type="date" 
                       value="@Model.completionTime.ToString(Constants.DATE_FORMAT)" />    
            } else {
                <input class="input-medium" name="completionTime" id="completionTime" type="date" />
            }
        </div>

        <div>
            <br />
            @Html.Label(Constants.UIString.FieldLabel.STATUS)
        </div>

        <div>
            @foreach (var status in Enum.GetValues(
                typeof(Constants.RequestStatus))) {
                <label class="checkbox inline">
                    @if (!String.IsNullOrEmpty(Model.requestStatus) && 
                         Model.requestStatus.Contains(@status.ToString())) {
                        <input type="checkbox" name="status" value="@status" checked/>
                    } else {
                        <input type="checkbox" name="status" value="@status" />
                    }
                    @status
                </label>
            }
        </div>

        <div>
            <br />
            @Html.Label(Constants.UIString.FieldLabel.CALLER_NAME_LABEL)
        </div>

        <div>
            <input type="text" class="input-medium" name="requestorFirst" 
                   placeholder="First Name" value="@Model.requestorFirstName">
            <input type="text" class="input-medium" name="requestorLast" 
                   placeholder="Last Name" value="@Model.requestorLastName">
        </div>

        <div>
            <br />
            @Html.Label(Constants.UIString.FieldLabel.PATIENT_NAME_LABEL)
        </div>

        <div>
            <input type="text" class="input-medium" name="patientFirst"
                   placeholder="First Name" value="@Model.patientFirstName">
            <input type="text" class="input-medium" name="patientLast" 
                   placeholder="Last Name" value="@Model.patientLastName">
        </div>

        <div>
            <br />
            @Html.Label(Constants.UIString.FieldLabel.TUMOUR_GROUP)
        </div>

        <div class="scroll">
            @foreach (DropdownEntry item in @ViewBag.TumorGroups) {
                <label class="checkboxlist">
                    @if (!String.IsNullOrEmpty(Model.tumorGroup) &&
                         Model.tumorGroup.Contains(@item.id + "")) {
                        <input type="checkbox" name="tumorGroup" class="internalcheckbox" value="@item.id" checked/>
                    } else {
                        <input type="checkbox" name="tumorGroup" class="internalcheckbox" value="@item.id" />
                    }
                    @item.value
                </label>
                <br/>
            }
        </div>

        <div>
            <br />
            @Html.Label(Constants.UIString.FieldLabel.QUESTION_TYPE)
        </div>

        <div class="scroll">
            @foreach (DropdownEntry item in @ViewBag.QuestionType) {
                <label class="checkboxlist">
                    @if (!String.IsNullOrEmpty(Model.questionType) && 
                         Model.questionType.Contains(@item.id+"")) {
                        <input type="checkbox" name="questionType" class="internalcheckbox" value="@item.id" checked/>
                    } else {
                        <input type="checkbox" name="questionType" class="internalcheckbox" value="@item.id"/>
                    }
                    @item.value
                </label>
                <br/>
            }
        </div>

        <div></div>

        <div>
            <br/>
            @Html.Label(Constants.UIString.FieldLabel.SEVERITY)
        </div>

        <div>
        @foreach (string severity in Enum.GetValues(typeof(Constants.Severity))) {
            <label class="checkboxlist">
                @if (!String.IsNullOrEmpty(Model.severity) && Model.severity.Contains(@severity)) {
                    <label class="checkbox" for="severity-@severity">
                        <input type="checkbox" value="@severity" id="severity-@severity" name="severity" checked="checked">
                        @severity
                    </label>
                } else {
                    <label class="checkbox" for="severity-@severity">
                        <input type="checkbox" value="@severity" id="severity-@severity" name="severity">
                        @severity
                    </label>
                }
            </label>
            }
        </div>

        <div>
            <br/>
            @Html.Label(Constants.UIString.FieldLabel.CONSEQUENCE)
        </div>

        <div>
            @foreach (var consequence in Enum.GetValues(
                typeof(Constants.Consequence))) {
                <label class="checkbox inline">
                    
                    @if (!String.IsNullOrEmpty(Model.consequence) && 
                         Model.consequence.Contains(@consequence.ToString())) {
                        <input type="checkbox" name="consequence" value="@consequence" checked/>
                    } else
                    {
                        <input type="checkbox" name="consequence" value="@consequence" />  
                    }
                    @consequence
                </label>
            }
        </div>

        <p>
            <br />
            <input class="btn" type="submit" value="@Constants.UIString.ButtonText.SEARCH" />
        </p>
    </fieldset>
}
<script type="text/javascript">
    $(function() {
        $('#startTime').datepicker();
        $('#completionTime').datepicker();
    });
</script>