@using SasquatchCAIRS.Models.ServiceSystem
@model SasquatchCAIRS.Models.SearchSystem.SearchCriteria

@{
    ViewBag.Title = "Advanced Search";
}

<h2>Advanced Search</h2>

@using (Html.BeginForm("Results", "Search", FormMethod.Post,
    new {
        @class = "form form-search advanced-search"
    })) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SearchCriteria</legend>

        <div>
            <br >
            @Html.Label("Keywords")
        </div>
        <div>
            @Html.EditorFor(model => model.keywordString)
            @Html.ValidationMessageFor(model => model.keywordString)
        </div>

        <div>
            <br />
            @Html.Label("Start Time")
        </div>
        <div>
            @Html.EditorFor(model => model.startTime)
            @Html.ValidationMessageFor(model => model.startTime)
        </div>

        <div>
            <br />
            @Html.Label("Completion Time")
        </div>
        <div>
            @Html.EditorFor(model => model.completionTime)
            @Html.ValidationMessageFor(model => model.completionTime)
        </div>

        <div>
            <br />
            @Html.Label("Status")
        </div>

        <div>
            @foreach (var status in Enum.GetValues(typeof(SasquatchCAIRS.Models.Constants.RequestStatus))) {
                <label class="checkbox inline">
                @if (!String.IsNullOrEmpty(Model.requestStatus) && Model.requestStatus.Contains(@status.ToString())) {
                    <input type="checkbox" name="status" value="@status" checked/>
                } else {
                    <input type="checkbox" name="status" value="@status" />
                }
                    @status
                </label>
            }
        </div>

        <div>
            <br />
            @Html.Label("Requestor Name")
        </div>

        <div>
            <input type="text" class="input-medium" name="requestorFirst" placeholder="First Name" value="@Model.requestorFirstName">
            <input type="text" class="input-medium" name="requestorLast" placeholder="Last Name" value="@Model.requestorLastName">
        </div>

        <div>
            <br />
            @Html.Label("Patient Name")
        </div>

        <div>
            <input type="text" class="input-medium" name="patientFirst" placeholder="First Name" value="@Model.patientFirstName">
            <input type="text" class="input-medium" name="patientLast" placeholder="Last Name" value="@Model.patientLastName">
        </div>

        <div>
            <br />
            @Html.Label("Tumor Group")
        </div>

        <div>
            @*
            TODO REPLACE WITH CHECKBOXLIST
            selected="selected"
            *@
            <select multiple="multiple" name="tumorGroup">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
            </select>
        </div>

        <div>
            <br />
            @Html.Label("Question Type")
        </div>
        <div>
            @*
            TODO REPLACE WITH CHECKBOXLIST
            selected="selected"
            *@
            <select multiple="multiple" name="questionType">
                @foreach (DropdownEntry item in @ViewBag.QuestionType) {
                    if (!String.IsNullOrEmpty(Model.severity) && Model.questionType.Contains(@item.ToString())) {
                        <option selected="selected">@item.value</option>
                    } else {
                        <option>@item.value</option>
                    }
                }
            </select>
            @*
            <select multiple="multiple" name="questionType">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
            </select>*@
        </div>

        <div>
            <br />
            @Html.Label(" Severity")
        </div>
        <div>
            @foreach (var severity in Enum.GetValues(typeof(SasquatchCAIRS.Models.Constants.Severity))) {
                <label class="checkbox inline">
                @if (!String.IsNullOrEmpty(Model.severity) && Model.severity.Contains(@severity.ToString())) {
                    <input type="checkbox" name="severity" value="@severity" checked/>
                } else {
                    <input type="checkbox" name="severity" value="@severity" />
                }
                    @severity
                </label>
            }
        </div>

        <div>
            <br />
            @Html.Label(" Consequence")
        </div>

        <div>
            
            @foreach (var consequence in Enum.GetValues(typeof(SasquatchCAIRS.Models.Constants.Consequence))) {
                <label class="checkbox inline">
                    @if (!String.IsNullOrEmpty(Model.consequence) && Model.consequence.Contains(@consequence.ToString())) {
                        <input type="checkbox" name="consequence" value="@consequence" checked/>
                    } else
                    {
                      <input type="checkbox" name="consequence" value="@consequence" />  
                    }
                    @consequence
                </label>
            }
        </div>

        <p>
            <br />
            <input class="btn" type="submit" value="Search!" />
        </p>
    </fieldset>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
